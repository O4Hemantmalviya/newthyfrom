{"ast":null,"code":"var _jsxFileName = \"/home/ems/reactjs/newthyfrom/src/app/shared/Sidebar.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Collapse } from 'react-bootstrap'; // import { Dropdown } from 'react-bootstrap';\n\nimport { Trans } from 'react-i18next';\n\nclass Sidebar extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n\n  toggleMenuState(menuState) {\n    if (this.state[menuState]) {\n      this.setState({\n        [menuState]: false\n      });\n    } else if (Object.keys(this.state).length === 0) {\n      this.setState({\n        [menuState]: true\n      });\n    } else {\n      Object.keys(this.state).forEach(i => {\n        this.setState({\n          [i]: false\n        });\n      });\n      this.setState({\n        [menuState]: true\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    document.querySelector('#sidebar').classList.remove('active');\n    Object.keys(this.state).forEach(i => {\n      this.setState({\n        [i]: false\n      });\n    });\n    const dropdownPaths = [{\n      path: '/apps',\n      state: 'appsMenuOpen'\n    }, {\n      path: '/create-form',\n      state: 'createFormMenuOpen'\n    }, {\n      path: '/form-elements',\n      state: 'formElementsMenuOpen'\n    }, {\n      path: '/tables',\n      state: 'tablesMenuOpen'\n    }, {\n      path: '/icons',\n      state: 'iconsMenuOpen'\n    }, {\n      path: '/charts',\n      state: 'chartsMenuOpen'\n    }, {\n      path: '/user-pages',\n      state: 'userPagesMenuOpen'\n    }, {\n      path: '/error-pages',\n      state: 'errorPagesMenuOpen'\n    }];\n    dropdownPaths.forEach(obj => {\n      if (this.isPathActive(obj.path)) {\n        this.setState({\n          [obj.state]: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"sidebar sidebar-offcanvas \",\n      id: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-between align-items-center p-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"navbar-toggler navbar-toggler align-self-center\",\n      type: \"button\",\n      onClick: () => document.body.classList.toggle('sidebar-icon-only'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mdi mdi-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center sidebar-brand-wrapper d-flex align-items-center \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://www.bootstrapdash.com/demo/star-admin2-pro/template/images/logo.svg\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }))))), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: this.isPathActive('/dashboard') ? 'nav-item active' : 'nav-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mdi mdi-grid-large menu-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"menu-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Trans, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 44\n      }\n    }, \"Dashboard\")))), /*#__PURE__*/React.createElement(\"li\", {\n      className: this.isPathActive('/Jotfrom') ? 'nav-item active' : 'nav-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/Jotfrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"menu-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Trans, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 44\n      }\n    }, \"jotform\")))), /*#__PURE__*/React.createElement(\"li\", {\n      className: this.isPathActive('/charts/Chart-js') ? 'nav-item active' : 'nav-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.chartsMenuOpen ? 'nav-link menu-expanded' : 'nav-link',\n      onClick: () => this.toggleMenuState('chartsMenuOpen'),\n      \"data-toggle\": \"collapse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"menu-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Trans, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 44\n      }\n    }, \"Chart\"))), /*#__PURE__*/React.createElement(Collapse, {\n      in: this.state.chartsMenuOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav flex-column sub-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Link, {\n      className: this.isPathActive('') ? 'nav-link active' : 'nav-link',\n      to: \"/charts/Chart-js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(Trans, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 140\n      }\n    }, \"Charts\"))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Link, {\n      className: this.isPathActive('') ? 'nav-link active' : 'nav-link',\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(Trans, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 125\n      }\n    }, \"Advance Charts\"))))))));\n  }\n\n  isPathActive(path) {\n    return this.props.location.pathname.startsWith(path);\n  }\n\n  componentDidMount() {\n    this.onRouteChanged(); // add className 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n\n    const body = document.querySelector('body');\n    document.querySelectorAll('.sidebar .nav-item').forEach(el => {\n      el.addEventListener('mouseover', function () {\n        if (body.classList.contains('sidebar-icon-only')) {\n          el.classList.add('hover-open');\n        }\n      });\n      el.addEventListener('mouseout', function () {\n        if (body.classList.contains('sidebar-icon-only')) {\n          el.classList.remove('hover-open');\n        }\n      });\n    });\n  }\n\n}\n\nexport default withRouter(Sidebar);","map":{"version":3,"sources":["/home/ems/reactjs/newthyfrom/src/app/shared/Sidebar.js"],"names":["React","Component","Link","withRouter","Collapse","Trans","Sidebar","state","toggleMenuState","menuState","setState","Object","keys","length","forEach","i","componentDidUpdate","prevProps","props","location","onRouteChanged","document","querySelector","classList","remove","dropdownPaths","path","obj","isPathActive","render","body","toggle","chartsMenuOpen","pathname","startsWith","componentDidMount","querySelectorAll","el","addEventListener","contains","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Collapse } from 'react-bootstrap';\n// import { Dropdown } from 'react-bootstrap';\nimport { Trans } from 'react-i18next';\n\n\nclass Sidebar extends Component {\n  state = {};\n\n  toggleMenuState(menuState) {\n    if (this.state[menuState]) {\n      this.setState({[menuState] : false});\n    } else if(Object.keys(this.state).length === 0) {\n      this.setState({[menuState] : true});\n    } else {\n      Object.keys(this.state).forEach(i => {\n        this.setState({[i]: false});\n      });\n      this.setState({[menuState] : true});\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    document.querySelector('#sidebar').classList.remove('active');\n    Object.keys(this.state).forEach(i => {\n      this.setState({[i]: false});\n    });\n\n    const dropdownPaths = [\n      {path:'/apps', state: 'appsMenuOpen'},\n      {path:'/create-form', state: 'createFormMenuOpen'},\n      {path:'/form-elements', state: 'formElementsMenuOpen'},\n      {path:'/tables', state: 'tablesMenuOpen'},\n      {path:'/icons', state: 'iconsMenuOpen'},\n      {path:'/charts', state: 'chartsMenuOpen'},\n      {path:'/user-pages', state: 'userPagesMenuOpen'},\n      {path:'/error-pages', state: 'errorPagesMenuOpen'},\n    ];\n\n    dropdownPaths.forEach((obj => {\n      if (this.isPathActive(obj.path)) {\n        this.setState({[obj.state] : true})\n      }\n    }));\n \n  } \n  render () {\n    return (\n      \n      <nav className=\"sidebar sidebar-offcanvas \" id=\"sidebar\">\n        <div className='row d-flex justify-content-between align-items-center p-3 '>\n          <div className='col-md-2'> <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" onClick={ () => document.body.classList.toggle('sidebar-icon-only') }>\n            <i className=\"mdi mdi-menu\"></i>\n          </button></div>\n          <div className='col-md-10'> <div className=\"text-center sidebar-brand-wrapper d-flex align-items-center \">\n          {/* <a className=\"sidebar-brand brand-logo\" href=\"index.html\">Star Admin</a>\n          <a className=\"sidebar-brand brand-logo-mini pt-3\" href=\"index.html\"></a> */}\n          <Link to='/'>\n            <img src='https://www.bootstrapdash.com/demo/star-admin2-pro/template/images/logo.svg' alt=\"logo\" />\n          </Link>\n        </div></div>\n        </div>\n        \n       \n        <ul className=\"nav\">\n        \n          {/* <li className=\"nav-item nav-profile not-navigation-link\">\n            <div className=\"nav-link\">\n              <Dropdown>\n                <Dropdown.Toggle className=\"nav-link user-switch-dropdown-toggler p-0 toggle-arrow-hide bg-transparent border-0 w-100\">\n                  <div className=\"d-flex justify-content-between align-items-start\">\n                    <div className=\"profile-image\">\n                    <img className=\"img-xs rounded-circle\" src={ require(\"../../assets/images/faces/face8.jpg\")} alt=\"profile\" />\n                      <div className=\"dot-indicator bg-success\"></div>\n                    </div>\n                    <div className=\"text-wrapper\">\n                      <p className=\"profile-name\">Allen Moreno</p>\n                      <p className=\"designation\">Premium user</p>\n                    </div>\n                    \n                  </div>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"preview-list navbar-dropdown\">\n                  <Dropdown.Item className=\"dropdown-item p-0 preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"d-flex\">\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center\">\n                        <i className=\"mdi mdi-bookmark-plus-outline mr-0\"></i>\n                      </div>\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center border-left border-right\">\n                        <i className=\"mdi mdi-account-outline mr-0\"></i>\n                      </div>\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center\">\n                        <i className=\"mdi mdi-alarm-check mr-0\"></i>\n                      </div>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center text-small\" onClick={evt =>evt.preventDefault()}>\n                    <Trans>Manage Accounts</Trans>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center text-small\" onClick={evt =>evt.preventDefault()}>\n                    <Trans>Change Password</Trans>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center text-small\" onClick={evt =>evt.preventDefault()}>\n                    <Trans>Check Inbox</Trans>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center text-small\" onClick={evt =>evt.preventDefault()}>\n                    <Trans>Sign Out</Trans>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </li> */}\n      \n          <li className={ this.isPathActive('/dashboard') ? 'nav-item active' : 'nav-item' }>\n         <Link className=\"nav-link\" to=\"/dashboard\">\n         <i className=\"mdi mdi-grid-large menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Dashboard</Trans></span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/Jotfrom') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/Jotfrom\">\n              {/* <i className=\"mdi mdi-television menu-icon\"></i> */}\n              <span className=\"menu-title\"><Trans>jotform</Trans></span>\n            </Link>\n          </li>\n          {/* <li className={ this.isPathActive('/dashboard') ? 'nav-item active' : 'nav-item' }>\n          <div className={ this.state.createFormMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('createFormMenuOpen') } data-toggle=\"collapse\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"mdi mdi-television menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Create From</Trans></span>\n            </Link>\n            <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.createFormMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n              <h6 className='text-center'>Basic</h6>\n                <li className=\"nav-item \"> <Link className={ this.isPathActive('/basic-ui/buttons') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/buttons\"><Trans>Heading</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Full Name</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans> \n                Email</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans></Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Phone</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Date picker</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Appointment</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Signature</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Fill the Blank</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Product List</Trans></Link></li>\n                <h6 className='text-center'>Basic Element</h6>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Short text</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Long text</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Paragraph</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Dropdown</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Single choice</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Multiple Choice</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Number</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Image</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>File Upload</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Time</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Captcha</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Spinner</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Submit</Trans></Link></li>\n                <h6 className='text-center'>Survey Elements</h6>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>input Table</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Star Rating</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Scale Rating</Trans></Link></li>\n                <h6 className='text-center'>Page Element</h6>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Divider</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Section Collapse</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>page Braak</Trans></Link></li>\n              </ul>\n            </Collapse>\n         </li> */}\n          {/*  <li className={ this.isPathActive('/Widgets') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.basicUiMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('basicUiMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Widgets</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.basicUiMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/buttons') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/buttons\"><Trans>Buttons</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/dropdowns') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/dropdowns\"><Trans>Dropdowns</Trans></Link></li>\n              </ul>\n            </Collapse>\n          </li> */}\n          {/* <li className={ this.isPathActive('/charts/ChartJs') ? 'nav-item active' : 'nav-item' } >\n            <div className={ this.state.chartsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('chartsMenuOpen ') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-format-list-bulleted menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Chart</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.chartsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/charts/ChartJs') ? 'nav-link active' : 'nav-link' } to=\"/charts/ChartJs\"><Trans>Chart</Trans></Link></li>               \n               </ul>\n              \n            </Collapse>\n             \n           \n          </li> */}\n          <li className={ this.isPathActive('/charts/Chart-js') ? 'nav-item active' : 'nav-item' }>\n          <div className={ this.state.chartsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('chartsMenuOpen') } data-toggle=\"collapse\">\n            {/* <Link className=\"nav-link\" to=\"/dashboard\"> */}\n              {/* <i className=\"mdi mdi-television menu-icon\"></i> */}\n              <span className=\"menu-title\"><Trans>Chart</Trans></span>\n            {/* </Link> */}\n            {/* <i className=\"menu-arrow\"></i> */}\n            </div>\n            <Collapse in={ this.state.chartsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/charts/Chart-js\"><Trans>Charts</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('') ? 'nav-link active' : 'nav-link' } to=\"/\"><Trans>Advance Charts</Trans></Link></li>\n              </ul>\n            </Collapse>\n         </li>\n          {/* <li className={ this.isPathActive('/charts') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.chartsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('chartsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-chart-line menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>chart</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.chartsMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/buttons') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/buttons\"><Trans>Buttons</Trans></Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/dropdowns') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/dropdowns\"><Trans>Dropdowns</Trans></Link></li>\n              </ul>\n            </Collapse>\n          </li>  */}\n          {/* <li className={ this.isPathActive('/tables') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.tablesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('tablesMenuOpen') }>\n              <i className=\"mdi mdi-table-large menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>UI Elements</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/icons') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.iconsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('iconsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-account-box-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>UI Elements</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/charts') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.chartsMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('chartsMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-chart-line menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Advance UI</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li> */}\n          {/* <li className={ this.isPathActive('/user-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.userPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('userPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-lock-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Forms and Datas</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Form Elements</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Editors</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Charts</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Tables</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li> */}\n          {/* <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Popups</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Notifications</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Icons</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Maps</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li> */}\n          {/* <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Pages</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>User Pages</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/error-pages') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.errorPagesMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('errorPagesMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-information-outline menu-icon\"></i>\n              <span className=\"menu-title\"><Trans>Error Pages</Trans></span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n          </li> */}\n        </ul>\n      </nav>\n    );\n  }\n\n  isPathActive(path) {\n    return this.props.location.pathname.startsWith(path);\n  }\n\n  componentDidMount() {\n    this.onRouteChanged();\n    // add className 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n    const body = document.querySelector('body');\n    document.querySelectorAll('.sidebar .nav-item').forEach((el) => {\n      \n      el.addEventListener('mouseover', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.add('hover-open');\n        }\n      });\n      el.addEventListener('mouseout', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.remove('hover-open');\n        }\n      });\n    });\n  }\n\n}\n\nexport default withRouter(Sidebar);"]},"metadata":{},"sourceType":"module"}